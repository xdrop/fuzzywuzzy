
apply plugin: 'java-library'

project.version = '2.0.0'
sourceCompatibility = 1.7
targetCompatibility = 1.7

task wrapper(type: Wrapper) {
    gradleVersion = '4.10.2'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'groovy'
    
    group 'me.xdrop'

    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    repositories {
        jcenter()
    }

    dependencies {
        testImplementation 'org.easymock:easymock:3.6'
        testImplementation 'org.codehaus.groovy:groovy-test:2.5.3'
    }
    
    jar {
        // add a redundant classifier to the jars; important for adding artifacts to publication
        classifier "sources-${project.name}".toLowerCase()
    }

    task javadocJar(type: Jar) {
        group 'build'
        description 'Assembles a jar archive containing the JavaDoc files.'
        classifier 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        group 'build'
        description 'Assembles a jar archive containing the Java source files.'
        classifier 'sources'
        from sourceSets.main.allJava
    }
    
    artifacts {
        archives javadocJar, sourcesJar
    }

    javadoc {
        source = sourceSets.main.allJava
        options.encoding = 'UTF-8'
        options.destinationDirectory = new File("docs\\javadoc")
        outputs.upToDateWhen { false }
    }

    compileTestGroovy {
        // DefaultStringProcessorTest is using special characters
        options.encoding = 'UTF-8'
    }

    sourceSets {
        main {
            java {
                srcDirs = ["src\\main\\java"]
            }
        }

        test {
            groovy {
                srcDirs = ["src\\test\\groovy"]
            }
        }
    }
    
    test {
        outputs.upToDateWhen { false }
    }
}

project(':fuzzywuzzy') {
    version '2.0.0'
}

project(':levenshtein') {
    version '2.0.0'

    dependencies {
        implementation project(':fuzzywuzzy')
    }
}

project(':android-attacher') {
    version '0.1.0'
    
    repositories {
        google()
    }
    
    dependencies {
        implementation project(':fuzzywuzzy')
        
        // Workaround dependency for compiling with android methods baked in
        compileOnly project(':android-compat')

        println "[INFO] Resolving dependencies of module ${project.name} cannot be finished automatically; " +
                "you need to set up Android SDK 28 manually as module SDK within your IDE."
    }
    
    test {
        // DO NOT run tests on Travis because this module additionally requires Android SDK 28 or higher.
        outputs.upToDateWhen { true }
    }
}

project(':android-compat') {
    sourceSets {
        main {
            java {
                srcDirs = ["src\\"]
            }
        }
    }
}

// if we are not on travis, use the publishing file
if (!isTravis()) {
    apply from: 'gradle/publishing.gradle'
}

// utility method to decide whether we are on travis ci machine
static boolean isTravis() {
    return System.getenv().containsKey("TRAVIS")
}
